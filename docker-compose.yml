services:
  # ============================================
  # 1. ZOOKEEPER - ตัวจัดการ Kafka (จำเป็นต้องมี)
  # ============================================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transit-network

  # ============================================
  # 2. KAFKA - รับส่งข้อมูล GPS แบบ Real-time
  # ============================================
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - transit-network

  # ============================================
  # 3. ELASTICSEARCH - เก็บข้อมูล GPS แบบ Real-time
  # ============================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    networks:
      - transit-network

  # ============================================
  # 4. KIBANA - แสดงแผนที่รถเมล์แบบสดๆ
  # ============================================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    networks:
      - transit-network

  # ============================================
  # 5. POSTGRESQL - เก็บข้อมูลสรุปรายวัน
  # ============================================
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: transit_user
      POSTGRES_PASSWORD: transit_pass
      POSTGRES_DB: transit_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - transit-network

  # ============================================
  # 6. SPARK MASTER - สมอง Spark (ประมวลผลข้อมูล)
  # ============================================
  spark-master:
    image: apache/spark:3.4.1
    container_name: spark-master
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark:/opt/spark-apps
      - ./spark-cache:/home/spark/.ivy2 
    networks:
      - transit-network

  # ============================================
  # 7. SPARK WORKER - มือ Spark (ทำงานตามคำสั่ง Master)
  # ============================================
  spark-worker:
    image: apache/spark:3.4.1
    container_name: spark-worker
    command: /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_WORKER_MEMORY: 1G
      SPARK_WORKER_CORES: 1
    volumes:
      - ./spark:/opt/spark-apps
      - ./spark-cache:/home/spark/.ivy2 
    networks:
      - transit-network

  # ============================================
  # 8. AIRFLOW - ตั้งเวลารันงานทุกเที่ยงคืน
  # ============================================
  airflow-webserver:
    image: apache/airflow:2.7.3-python3.11
    container_name: airflow-webserver
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://transit_user:transit_pass@postgres/transit_db
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__WEBSERVER__SECRET_KEY=transit_secret_key_12345
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
    ports:
      - "8081:8080"  # Airflow UI
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true &&
               airflow webserver"
    networks:
      - transit-network

  airflow-scheduler:
    image: apache/airflow:2.7.3-python3.11
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://transit_user:transit_pass@postgres/transit_db
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
    command: airflow scheduler
    networks:
      - transit-network

# ============================================
# NETWORKS - เชื่อม services เข้าด้วยกัน
# ============================================
networks:
  transit-network:
    driver: bridge

# ============================================
# VOLUMES - เก็บข้อมูลไม่ให้หาย
# ============================================
volumes:
  es-data:
  postgres-data: